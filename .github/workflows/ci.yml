name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        ruby: ['3.3', '3.4']
        gemfile:
          - rails_7.x_active_admin_4.x
          - rails_8.x_active_admin_4.x

    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      RAILS_ENV: test
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/ms-playwright

    steps:
      - uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      # Cache APT packages for Playwright dependencies
      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@v1.5.3
        with:
          packages: libnss3 libnspr4 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libdbus-1-3 libatspi2.0-0 libx11-6 libxcomposite1 libxdamage1 libxext6 libxfixes3 libxrandr2 libgbm1 libxcb1 libxkbcommon0 libpango-1.0-0 libcairo2 libasound2
          version: 1.0
          execute_install_scripts: true

      # Get Playwright version for cache key
      - name: Get Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test 2>/dev/null | grep @playwright/test | sed 's/.*@//' | head -1)
          if [ -z "$PLAYWRIGHT_VERSION" ]; then
            PLAYWRIGHT_VERSION=$(npx playwright --version | sed 's/Version //')
          fi
          echo "version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      # Cache Playwright browsers
      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-
            ${{ runner.os }}-playwright-

      - name: Install npm dependencies
        run: npm install

      - name: Build and install npm package
        run: |
          # Build the npm package
          npm pack
          
          # Extract it to a temporary location
          mkdir -p /tmp/npm-package
          tar -xzf rocket-sensei-activeadmin-searchable_select-*.tgz -C /tmp/npm-package
          
          # Update spec/internal to use the extracted package
          cd spec/internal
          # Remove any existing symlink/folder
          rm -rf package
          rm -rf node_modules/@rocket-sensei/activeadmin-searchable_select
          npm install
          
          # Install from the extracted package
          npm install /tmp/npm-package/package
          
          # Build assets (JS and CSS)
          echo "Building JavaScript assets..."
          npm run build:js
          
          echo "Building CSS assets..."
          npm run build:css:activeadmin
          
          echo "Copying Select2 assets..."
          npm run copy:select2
          
          # Verify assets were built
          echo "Checking built assets..."
          ls -la app/assets/builds/
          
          echo "Checking public/select2..."
          ls -la public/select2/ || echo "public/select2 not found"

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium

      - name: Setup test database
        run: |
          # The database tasks may not be available, skip for now
          echo "Database setup will be handled by test suite"

      - name: Run tests with coverage
        run: |
          bundle exec rspec --format progress --format RspecJunitFormatter --out rspec-results.xml
        continue-on-error: true

      - name: Upload coverage to Codecov
        if: matrix.ruby == '3.4' && matrix.gemfile == 'rails_7.x_active_admin_4.x'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/coverage.json
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: SonarQube Scan
        if: matrix.ruby == '3.4' && matrix.gemfile == 'rails_7.x_active_admin_4.x' && github.event_name != 'pull_request'
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL || 'https://sonarcloud.io' }}
        with:
          args: >
            -Dsonar.projectKey=glebtv_activeadmin-searchable_select
            -Dsonar.ruby.coverage.reportPaths=coverage/coverage.json
            -Dsonar.ruby.rspec.reportPaths=rspec-results.xml
        continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Run RuboCop
        run: bundle exec rubocop --force-exclusion

  build-npm:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check package
        run: npm pack --dry-run
